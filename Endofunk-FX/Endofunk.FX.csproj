<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.2</TargetFramework>
    <Description>A core library to enable functional programming in C#

Data Types:
- Identity
- Maybe
- Result
- Either
- Validation
- Reader
- Writer
- IO
- State
- Tagged
- Coyoneda
- Yoneda

Prelude (Standard Library)
- Syntactic sugar to simplify use of data types and .Net Core Framework
- Linq conformance for all data types
- Function: Curry, Uncurry, Flip, Partial Application, Delegate Lifters, Combinators
- Tuple: Predicates, Splat, ...
- Boolean Combinators
- IEnumerable extension methods
- etc.
</Description>
    <RootNamespace>Endofunk.FX</RootNamespace>
    <AssemblyName>Endofunk.FX</AssemblyName>
    <PackageId>Endofunk.FX</PackageId>
    <PackageVersion>0.3</PackageVersion>
    <Authors>endofunk</Authors>
    <Copyright>Copyright (c) endofunk</Copyright>
    <Owners>endofunk</Owners>
    <Title>Functional Programming for .Net</Title>
    <PackageIconUrl>https://raw.githubusercontent.com/endofunk/Endofunk-FX/master/Endofunk-FX/images/endofunk.png</PackageIconUrl>
    <PackageProjectUrl>https://endofunk.github.io/Endofunk-FX/</PackageProjectUrl>
    <PackageReleaseNotes>Prelude: 
Flip, Compose, Fix, Until, UnCurry, Pipe, Simplify

IEnumerable: 
Repeat, Replicate, Cycle, SplitAt, Span, Zip

Data Types: ToString (All Types), State changes
Validation, Either, Maybe, Writer, Tagged, State, Reasult, Reader, Maybe, IO, Identity, IEnumerable.</PackageReleaseNotes>
    <PackageTags>C#, Functional, Functional Programming, Functor, Monad, Applicative Functor, Traverse, Sequence, Identity, Maybe, Result, Either, Validation, Reader, Writer, Tagged Union, Coyoneda, Yoneda, IEnumerable, Lambda, Tuple, Functions, Pure, Pointfree</PackageTags>
    <Summary>A core library of functional data types, extension methods, Linq conformance and more.</Summary>
    <ReleaseVersion>0.3</ReleaseVersion>
  </PropertyGroup>
  <PropertyGroup>
    <PackageLicenseFile>license.txt</PackageLicenseFile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType></DebugType>
  </PropertyGroup>
  <ItemGroup>
    <Folder Include="licenses\" />
    <Folder Include="Prelude\" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="NuGet.Build.Packaging" Version="0.2.5-dev.8">
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
      <PrivateAssets>all</PrivateAssets>
    </PackageReference>
  </ItemGroup>
  <ProjectExtensions>
    <MonoDevelop>
      <Properties>
        <Policies>
          <StandardHeader IncludeInNewFiles="True" Text="${FileName}&#xA;&#xA;Copyright (c) ${Year} ${AuthorName}&#xA;&#xA;Permission is hereby granted, free of charge, to any person obtaining a copy&#xA;of this software and associated documentation files (the &quot;Software&quot;), to deal&#xA;in the Software without restriction, including without limitation the rights&#xA;to use, copy, modify, merge, publish, distribute, sublicense, and/or sell&#xA;copies of the Software, and to permit persons to whom the Software is&#xA;furnished to do so, subject to the following conditions:&#xA;&#xA;The above copyright notice and this permission notice shall be included in&#xA;all copies or substantial portions of the Software.&#xA;&#xA;THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&#xA;IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&#xA;FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE&#xA;AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER&#xA;LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,&#xA;OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN&#xA;THE SOFTWARE.&#xA;" />
        </Policies>
      </Properties>
    </MonoDevelop>
  </ProjectExtensions>
</Project>
